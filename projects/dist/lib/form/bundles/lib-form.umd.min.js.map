{"version":3,"sources":["../../../../../node_modules/tslib/tslib.es6.js","ng://@lib/form/lib/form.service.ts","ng://@lib/form/lib/form.component.ts","ng://@lib/form/lib/form.module.ts","ng://@lib/form/lib/validators/validator.type.ts","ng://@lib/form/lib/validators/validators.ts","ng://@lib/form/lib/validators/validators-dict.ts","ng://@lib/form/lib/reactive/control.ts","ng://@lib/form/lib/reactive/reactive.ts","ng://@lib/form/lib/components/components.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","FormService","Injectable","args","providedIn","FormComponent","ngOnInit","Component","selector","template","FormModule","NgModule","declarations","imports","exports","required","maxLength","minLength","max","min","email","pattern","LibValidators","tslib_1.__extends","Validators","ValidatorsDict","_a","ValidatorType","LibFormControl","_this","_super","apply","validators","_keys","_validatorsCount","defineProperty","isValidatorTypeApplied","type","indexOf","_convertValidatorsToArray","validator","element","_updateValidators","added","setValidators","updateValueAndValidity","_addValidatorTypes","_removeValidatorType","filter","_type","addValidator","addValidators","validators_1","tslib_1.__values","validators_1_1","setReadonly","setEditable","removeValidator","removeValidators","types","types_1","types_1_1","clearValidators","FormControl","LibFormGroup","controls","validatorOrOpts","asyncValidator","invalidControls","control","invalid","enabled","invalidFormGroups","FormGroup","FormArray","invalidFormGroupsAndControls","allInvalidControls","allInvalidControlsAndGroups","clearAllValidators","clearAllValues","setValue","clearValuesAndValidators","ComponentBase","controlContainer","subscriptions","form","ngOnDestroy","_b","_c","unsubscribe"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'lib-form',\r\n  template: `\r\n    <p>\r\n      form works!\r\n    </p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class FormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FormComponent } from './form.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FormComponent,\r\n  ],\r\n  imports: [\r\n  ],\r\n  exports: [\r\n    FormComponent\r\n  ]\r\n})\r\nexport class FormModule { }\r\n","\r\nexport enum ValidatorType {\r\n    required = 'required',\r\n    maxLength = 'maxLength',\r\n    minLength = 'minLength',\r\n    max = 'max',\r\n    min = 'min',\r\n    email = 'email',\r\n    pattern = 'pattern',\r\n}","import { Validators } from \"@angular/forms\";\r\n\r\nexport class LibValidators extends Validators {\r\n    \r\n}","import { ValidatorType } from './validator.type';\r\nimport { Validators } from '@angular/forms';\r\n\r\nexport const ValidatorsDict = {\r\n    [ValidatorType.required]: Validators.required,\r\n    [ValidatorType.maxLength]: Validators.maxLength,\r\n    [ValidatorType.minLength]: Validators.minLength,\r\n    [ValidatorType.max]: Validators.max,\r\n    [ValidatorType.min]: Validators.min,\r\n    [ValidatorType.email]: Validators.email,\r\n    [ValidatorType.pattern]: Validators.pattern,\r\n}","import { FormControl, ValidatorFn, Validators } from '@angular/forms';\r\n\r\nimport { ValidatorType } from '../validators/validator.type';\r\n\r\nexport class LibFormControl extends FormControl {\r\n    private validators: {\r\n        [key: string]: ValidatorFn;\r\n    } = {};\r\n\r\n    private _keys: string[] = [];\r\n    private _validatorsCount = 0;\r\n    get appliedValidators(): string[] {\r\n        return this._keys;\r\n    }\r\n\r\n    isValidatorTypeApplied(type: ValidatorType | string) {\r\n        return this._keys.indexOf(type) !== -1;\r\n    }\r\n\r\n    private _convertValidatorsToArray(): ValidatorFn[] {\r\n        const validators:ValidatorFn[] = [];\r\n        for (const validator in this.validators) {\r\n            if (this.validators.hasOwnProperty(validator)) {\r\n                const element = this.validators[validator];\r\n                validators.push(element);\r\n            }\r\n        }\r\n        return validators;\r\n    }\r\n\r\n    private _updateValidators(added: boolean = false) {\r\n        if (added || this._validatorsCount !== this._keys.length) {\r\n            const validators = this._convertValidatorsToArray();\r\n            this.setValidators(validators);\r\n            this.updateValueAndValidity();\r\n        }\r\n    }\r\n\r\n    private _addValidatorTypes(type: ValidatorType | string) {\r\n        if (this._keys.indexOf(type) === -1) {\r\n            this._keys.push(type);\r\n            this._validatorsCount = this._keys.length;\r\n        }\r\n    }\r\n\r\n    private _removeValidatorType(type: ValidatorType | string) {\r\n        this._keys = this._keys.filter(_type => _type !== type);\r\n    }\r\n\r\n    addValidator(type: ValidatorType | string, validator: ValidatorFn) {\r\n        this.validators[type] = validator;\r\n        this._addValidatorTypes(type);\r\n        this._updateValidators(true);\r\n    }\r\n    \r\n    addValidators(validators: {type: ValidatorType | string, validator: ValidatorFn}[]) {\r\n        for (const validator of validators) {\r\n            this.validators[validator.type] = validator.validator;\r\n            this._addValidatorTypes(validator.type);\r\n        }\r\n        this._updateValidators(true);\r\n    }\r\n\r\n    setReadonly() {\r\n\r\n    }\r\n\r\n    setEditable() {\r\n\r\n    }\r\n\r\n    removeValidator(type: ValidatorType | string) {\r\n        delete this.validators[type];\r\n        this._removeValidatorType(type);\r\n        this._updateValidators();\r\n    }\r\n\r\n    removeValidators(types: ValidatorType[] | string[]) {\r\n        for (const type of types) {\r\n            delete this.validators[type];\r\n            this._removeValidatorType(type);\r\n        }\r\n        this._updateValidators();\r\n    }\r\n\r\n    clearValidators() {\r\n        this.validators = {};\r\n        super.clearValidators();\r\n    }\r\n}","import { FormGroup, AbstractControl, ValidatorFn, AbstractControlOptions, AsyncValidatorFn, AbstractControlDirective, FormControl, FormArray } from '@angular/forms'\r\n\r\nexport interface IControls {\r\n    [key: string]: AbstractControl;\r\n}\r\n\r\nexport class LibFormGroup<T extends IControls> extends FormGroup {\r\n    constructor(controls: IControls, validatorOrOpts?: ValidatorFn | ValidatorFn[] | AbstractControlOptions, asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[]) {\r\n        super(controls as {\r\n            [key: string]: AbstractControl;\r\n        }, validatorOrOpts, asyncValidator)\r\n        this.controls = controls as T;\r\n    }\r\n\r\n    controls: T;\r\n\r\n    /**\r\n     * Returns a  list of FormControls that are invalid and enabled within the FormGroup.\r\n     * The FormControls of sub FormGroups and FormArrays are not returned. \r\n     */\r\n    invalidControls(): string[] {\r\n        const invalidControls: string[] = [];\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element instanceof FormControl && element.invalid && element.enabled) {\r\n                    invalidControls.push(control);\r\n                }\r\n            }\r\n        }\r\n        return invalidControls;\r\n    }\r\n    /**\r\n     * Returns a list of FormGroups and FormArrays that are invalid and enabled within the FormGroup.\r\n     * The FormGroups and FormArrays of sub FormGroups and FormArrays are not included. \r\n     */\r\n    invalidFormGroups(): string[] {\r\n        const invalidControls: string[] = [];\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if ((element instanceof FormGroup || element instanceof FormArray) && element.invalid && element.enabled) {\r\n                    invalidControls.push(control);\r\n                }\r\n            }\r\n        }\r\n        return invalidControls;\r\n    }\r\n\r\n    /**\r\n     * Returns a list of FormGroups, FormArrays and FormControls that are invalid and enabled within the FormGroup in no particular order.\r\n     * The FormGroups, FormArrays and FormControls of sub FormGroups and FormArrays are not included. \r\n     */\r\n    invalidFormGroupsAndControls() {\r\n        const invalidControls: string[] = [];\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    invalidControls.push(control);\r\n                }\r\n            }\r\n        }\r\n        return invalidControls;\r\n    }\r\n\r\n    /**\r\n     * Returns a list of FormControls that are invalid and enabled within the FormGroup in no particular order.\r\n     * The FormControls of sub FormGroups and FormArrays are included.\r\n     */\r\n    allInvalidControls() {\r\n        const invalidControls: string[] = [];\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    if (element instanceof LibFormGroup) {\r\n                        const invalid = element.allInvalidControls();\r\n                        invalidControls.push(...invalid);\r\n                    } else {\r\n                        invalidControls.push(control);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return invalidControls;\r\n    }\r\n\r\n    /**\r\n     * Returns a list of FormGroups, FormArrays and FormControls that are invalid and enabled within the FormGroup in no particular order.\r\n     * The FormGroups, FormArrays and FormControls of sub FormGroups and FormArrays are included. \r\n     */\r\n    allInvalidControlsAndGroups() {\r\n        const invalidControls: string[] = [];\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    if (element instanceof LibFormGroup) {\r\n                        const invalid = element.allInvalidControls();\r\n                        invalidControls.push(control);\r\n                        invalidControls.push(...invalid);\r\n                    } else {\r\n                        invalidControls.push(control);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return invalidControls;\r\n    }\r\n\r\n    clearAllValidators() {\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    if (element instanceof LibFormGroup) {\r\n                        element.clearAllValidators();\r\n                    } else {\r\n                        element.clearValidators();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clearAllValues() {\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    if (element instanceof LibFormGroup) {\r\n                        element.clearAllValidators();\r\n                    } else {\r\n                        element.setValue(null);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    clearValuesAndValidators() {\r\n        for (const control in this.controls) {\r\n            if (this.controls.hasOwnProperty(control)) {\r\n                const element = this.controls[control];\r\n                if (element.invalid && element.enabled) {\r\n                    if (element instanceof LibFormGroup) {\r\n                        element.clearValuesAndValidators();\r\n                    } else {\r\n                        element.setValue(null);\r\n                        element.clearValidators();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { OnDestroy, OnInit } from '@angular/core';\r\nimport { LibFormGroup, IControls } from '../reactive/reactive';\r\nimport { ControlContainer } from '@angular/forms';\r\n\r\nexport class ComponentBase<T extends IControls> implements OnInit, OnDestroy{\r\n    subscriptions: Subscription[] = [];\r\n\r\n    form: LibFormGroup<T>;\r\n\r\n    constructor(private controlContainer: ControlContainer) {}\r\n\r\n    ngOnInit() {\r\n        this.form = <LibFormGroup<T>>this.controlContainer.control;\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.form.clearValuesAndValidators();\r\n        for (const sub of this.subscriptions) {\r\n            sub.unsubscribe();\r\n        }\r\n    }\r\n}"]}